<!-- C√ìDIGO PARA PRODUCT.LIQUID - M√öLTIPLES VISUBLOQ PERSONALIZADO -->
<!-- Este c√≥digo va en la p√°gina del producto "VisuBloq Personalizado" -->

<script>
// üéØ MANEJO DE M√öLTIPLES DISE√ëOS VISUBLOQ EN EL CARRITO
document.addEventListener('DOMContentLoaded', function() {
    const urlParams = new URLSearchParams(window.location.search);
    const designData = urlParams.get('design_data');
    
    if (designData) {
        try {
            const design = JSON.parse(decodeURIComponent(designData));
            console.log('üé® Dise√±o recibido:', design);
            
            // Mostrar informaci√≥n del dise√±o en la p√°gina
            displayDesignInfo(design);
            
            // Configurar el formulario para a√±adir al carrito
            setupMultipleDesignCart(design);
            
        } catch (error) {
            console.error('Error procesando datos del dise√±o:', error);
        }
    }
});

function displayDesignInfo(design) {
    // Crear secci√≥n de informaci√≥n del dise√±o
    const productForm = document.querySelector('form[action="/cart/add"]') || document.querySelector('.product-form');
    
    if (productForm) {
        // Crear contenedor para la informaci√≥n del dise√±o
        const designInfoHTML = `
            <div class="visubloq-design-preview" style="border: 3px solid #ff6b35; padding: 20px; margin: 20px 0; border-radius: 10px; background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);">
                <h3 style="color: #ff6b35; margin: 0 0 15px 0; display: flex; align-items: center;">
                    üèóÔ∏è Tu Dise√±o LEGO Personalizado
                </h3>
                
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-bottom: 15px;">
                    <div class="design-image" style="text-align: center;">
                        <img src="${design.design_image}" alt="Tu dise√±o LEGO" 
                             style="max-width: 100%; height: auto; border: 2px solid #dee2e6; border-radius: 5px; box-shadow: 0 2px 8px rgba(0,0,0,0.1);">
                    </div>
                    <div class="design-specs">
                        <p><strong>üìä Total de piezas:</strong> ${design.total_pieces}</p>
                        <p><strong>üé® Colores diferentes:</strong> ${design.piece_types}</p>
                        <p><strong>üìê Resoluci√≥n:</strong> ${design.resolution}</p>
                        <p><strong>üïí Creado:</strong> ${new Date(design.generated_at).toLocaleString('es-ES')}</p>
                        <p style="font-size: 0.9em; color: #6c757d; margin-top: 10px;">
                            <strong>ID √∫nico:</strong> ${design.unique_id}
                        </p>
                    </div>
                </div>
                
                <div style="background: #fff3cd; border: 1px solid #ffeaa7; padding: 10px; border-radius: 5px; margin-top: 15px;">
                    <p style="margin: 0; font-size: 0.9em; color: #856404;">
                        <strong>üí° Consejo:</strong> Puedes a√±adir m√∫ltiples dise√±os al carrito. Cada uno se procesar√° individualmente con sus piezas espec√≠ficas.
                    </p>
                </div>
            </div>
        `;
        
        // Insertar antes del formulario de compra
        productForm.insertAdjacentHTML('beforebegin', designInfoHTML);
        
        // A√±adir detalles expandibles con la lista de piezas
        const detailsHTML = `
            <details style="margin-top: 15px;">
                <summary style="cursor: pointer; font-weight: bold; padding: 5px 0;">üìã Ver lista completa de piezas por color</summary>
                <div id="pieces-detail" style="margin-top: 10px; max-height: 300px; overflow-y: auto; background: #f8f9fa; padding: 15px; border-radius: 5px;">
                    ${generatePiecesTable(design.pieces_detail)}
                </div>
            </details>
        `;
        
        document.querySelector('.visubloq-design-preview').insertAdjacentHTML('beforeend', detailsHTML);
    }
}

function generatePiecesTable(piecesDetail) {
    if (!piecesDetail || typeof piecesDetail !== 'object') {
        return '<p>No hay detalles de piezas disponibles.</p>';
    }
    
    let tableHTML = `
        <table style="width: 100%; border-collapse: collapse; font-size: 0.9em;">
            <thead>
                <tr style="background: #e9ecef;">
                    <th style="border: 1px solid #dee2e6; padding: 8px; text-align: left;">Color</th>
                    <th style="border: 1px solid #dee2e6; padding: 8px; text-align: center;">Muestra</th>
                    <th style="border: 1px solid #dee2e6; padding: 8px; text-align: right;">Cantidad</th>
                </tr>
            </thead>
            <tbody>
    `;
    
    for (const [colorHex, quantity] of Object.entries(piecesDetail)) {
        tableHTML += `
            <tr>
                <td style="border: 1px solid #dee2e6; padding: 8px;">${colorHex}</td>
                <td style="border: 1px solid #dee2e6; padding: 8px; text-align: center;">
                    <div style="width: 20px; height: 20px; background-color: ${colorHex}; border: 1px solid #999; border-radius: 3px; margin: 0 auto;"></div>
                </td>
                <td style="border: 1px solid #dee2e6; padding: 8px; text-align: right; font-weight: bold;">${quantity}</td>
            </tr>
        `;
    }
    
    tableHTML += `
            </tbody>
        </table>
    `;
    
    return tableHTML;
}

function setupMultipleDesignCart(design) {
    // Buscar el formulario de a√±adir al carrito
    const cartForm = document.querySelector('form[action="/cart/add"]');
    
    if (cartForm) {
        // Crear campos ocultos con la informaci√≥n del dise√±o
        const designFields = [
            { name: 'properties[Dise√±o VisuBloq]', value: `${design.total_pieces} piezas, ${design.piece_types} colores, ${design.resolution}` },
            { name: 'properties[ID √önico]', value: design.unique_id },
            { name: 'properties[Total de piezas]', value: design.total_pieces },
            { name: 'properties[Colores diferentes]', value: design.piece_types },
            { name: 'properties[Resoluci√≥n]', value: design.resolution },
            { name: 'properties[Lista de piezas]', value: JSON.stringify(design.pieces_detail) },
            { name: 'properties[Imagen del dise√±o]', value: design.design_image },
            { name: 'properties[Generado el]', value: new Date(design.generated_at).toLocaleString('es-ES') }
        ];
        
        // Eliminar campos anteriores si existen
        const existingFields = cartForm.querySelectorAll('input[name*="properties"]');
        existingFields.forEach(field => field.remove());
        
        // A√±adir nuevos campos
        designFields.forEach(field => {
            const input = document.createElement('input');
            input.type = 'hidden';
            input.name = field.name;
            input.value = field.value;
            cartForm.appendChild(input);
        });
        
        // Actualizar el texto del bot√≥n de a√±adir al carrito
        const addToCartButton = cartForm.querySelector('button[type="submit"], input[type="submit"]');
        if (addToCartButton) {
            addToCartButton.textContent = 'üõí A√±adir este dise√±o al carrito';
            addToCartButton.style.backgroundColor = '#ff6b35';
            addToCartButton.style.color = 'white';
            addToCartButton.style.fontWeight = 'bold';
            addToCartButton.style.padding = '15px 25px';
            addToCartButton.style.fontSize = '1.1em';
        }
        
        console.log('‚úÖ Formulario configurado para m√∫ltiples dise√±os');
    }
}

// Funci√≥n para manejar la adici√≥n al carrito
document.addEventListener('submit', function(e) {
    if (e.target.action && e.target.action.includes('/cart/add')) {
        const designId = e.target.querySelector('input[name="properties[ID √önico]"]');
        if (designId) {
            console.log('üõí A√±adiendo dise√±o al carrito:', designId.value);
            
            // Mostrar mensaje de confirmaci√≥n temporal
            setTimeout(() => {
                const notification = document.createElement('div');
                notification.innerHTML = `
                    <div style="position: fixed; top: 20px; right: 20px; background: #28a745; color: white; padding: 15px 20px; border-radius: 5px; z-index: 9999; box-shadow: 0 4px 12px rgba(0,0,0,0.3);">
                        ‚úÖ Dise√±o a√±adido al carrito<br>
                        <small>Puedes a√±adir m√°s dise√±os antes de finalizar</small>
                    </div>
                `;
                document.body.appendChild(notification);
                
                setTimeout(() => {
                    notification.remove();
                }, 3000);
            }, 500);
        }
    }
});
</script>

<style>
.visubloq-design-preview {
    animation: slideIn 0.5s ease-out;
}

@keyframes slideIn {
    from { 
        opacity: 0; 
        transform: translateY(-20px); 
    }
    to { 
        opacity: 1; 
        transform: translateY(0); 
    }
}

.visubloq-design-preview:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 20px rgba(255, 107, 53, 0.2);
    transition: all 0.3s ease;
}

@media (max-width: 768px) {
    .visubloq-design-preview > div:first-child {
        grid-template-columns: 1fr !important;
        gap: 15px !important;
    }
}
</style>
